---
swagger: "2.0"
info:
  description: "Send Slack Notifications to a Desired Rundeck Endpoint"
  version: "2021-09-17T00:35:34Z"
  title: "Slack_Converter"
host: "v9cjybjbp3.execute-api.us-west-2.amazonaws.com"
basePath: "/Prod"
schemes:
- "https"
paths:
  /:
    post:
      consumes:
      - "application/x-www-form-urlencoded"
      responses:
        "200":
          description: "200 response"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        #Replace this URI with your Rundeck API endpoint
        uri: "https://delegator.myrundeck.com/api/40/webhook/abcdefghijklmnopqrstuvwxyz"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Content-Type: "'application/json'"
        requestTemplates:
          application/x-www-form-urlencoded: "##  See http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n\
            ##  This template will pass through all parameters including path, querystring,\
            \ header, stage variables, and context through to the integration endpoint\
            \ via the body/payload\n#set($allParams = $input.params())\n{\n\"body-json\"\
            \ : {\n    \"data\": {\n        #foreach( $token in $input.path('$').split('&')\
            \ )\n            #set( $keyVal = $token.split('=') )\n            #set(\
            \ $keyValSize = $keyVal.size() )\n            #if( $keyValSize >= 1 )\n\
            \                #set( $key = $util.urlDecode($keyVal[0]) )\n        \
            \        #if( $keyValSize >= 2 )\n                    #set( $val = $util.urlDecode($keyVal[1])\
            \ )\n                #else\n                    #set( $val = '' )\n  \
            \              #end\n                \"$key\": \"$val\"#if($foreach.hasNext),#end\n\
            \            #end\n        #end\n    }\n},\n\"params\" : {\n#foreach($type\
            \ in $allParams.keySet())\n    #set($params = $allParams.get($type))\n\
            \"$type\" : {\n    #foreach($paramName in $params.keySet())\n    \"$paramName\"\
            \ : \"$util.escapeJavaScript($params.get($paramName))\"\n        #if($foreach.hasNext),#end\n\
            \    #end\n}\n    #if($foreach.hasNext),#end\n#end\n},\n\"stage-variables\"\
            \ : {\n#foreach($key in $stageVariables.keySet())\n\"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\
            \n    #if($foreach.hasNext),#end\n#end\n},\n\"context\" : {\n    \"account-id\"\
            \ : \"$context.identity.accountId\",\n    \"api-id\" : \"$context.apiId\"\
            ,\n    \"api-key\" : \"$context.identity.apiKey\",\n    \"authorizer-principal-id\"\
            \ : \"$context.authorizer.principalId\",\n    \"caller\" : \"$context.identity.caller\"\
            ,\n    \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\"\
            ,\n    \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\"\
            ,\n    \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\"\
            ,\n    \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\"\
            ,\n    \"http-method\" : \"$context.httpMethod\",\n    \"stage\" : \"\
            $context.stage\",\n    \"source-ip\" : \"$context.identity.sourceIp\"\
            ,\n    \"user\" : \"$context.identity.user\",\n    \"user-agent\" : \"\
            $context.identity.userAgent\",\n    \"user-arn\" : \"$context.identity.userArn\"\
            ,\n    \"request-id\" : \"$context.requestId\",\n    \"resource-id\" :\
            \ \"$context.resourceId\",\n    \"resource-path\" : \"$context.resourcePath\"\
            \n    }\n}\n"
        passthroughBehavior: "when_no_templates"
        type: "http"
